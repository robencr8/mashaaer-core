وصف المشروع باختصار

Mashaaer هو نظام مساعد صوتي ذكي ثنائي اللغة (عربي/إنجليزي)، يتفاعل مع المستخدمين من خلال:
	•	واجهة تفاعلية ثلاثية الأبعاد شعوريًا (من حيث المشاعر والانفعالات)
	•	دعم أوامر صوتية حقيقية + توليد صوت TTS
	•	نظام تحديد نية المستخدم + تحليل المشاعر اللحظي
	•	اشتراك خططي (Basic / Pro / Supreme)
	•	خيارات تخصيص صوتية وشخصيات (Voice Personalities)

⸻

2. المتطلبات التقنية المنجزة (حاليًا):

الواجهة الأمامية (Frontend):
	•	ملفات HTML/CSS/JS جاهزة:
	•	index.html هي الصفحة الرئيسية
	•	ملفات مهيأة RTL وLTR (rtl.css, styles.css)
	•	دعم اللغات المزدوج عبر language-switcher.js
	•	أنظمة اشتراك، إعدادات صوت، سجل مشاعر — كلها مدمجة في app.js وملحقاته
	•	تصميم متجاوب ويدعم PWA (سهل التحويل لاحقًا)

منطق التفاعل:
	•	voice-agent.js يحتوي على:
	•	التعرف على الصوت (SpeechRecognition)
	•	توليد صوت (Text-to-Speech)
	•	تحليل نبرة الكلام لتحديد المشاعر
	•	دعم التعابير العامية وتفسيرها لغويًا (processDialect)
	•	أوامر تغيير اللغة والانتقال بين الشاشات عبر الصوت

أنظمة الاشتراك:
	•	ملفات مثل subscription.js وvoice-settings.js جاهزة لعرض وإدارة الخطط وتقييد المزايا حسب الخطة

⸻

3. ما هو مطلوب من Manus تنفيذه الآن:

أولاً: هيكلة المشروع
	•	تجهيز بيئة Node.js وفق package.json الموجود
	•	بدء الخادم من server.js باستخدام Express
	•	تفعيل CORS, body-parser, و sqlite3 (حسب dependencies)

ثانيًا: الربط الخلفي (Backend Integration)
	•	تنفيذ نقطة API واحدة موحدة /api/voice_logic
	•	يتم استقبال الكلام (نصيًا أو صوتيًا) وتحليله عبر LLM أو منطق جاهز
	•	ترجيع الرد المناسب + الحالة الشعورية + نية المستخدم

ثالثًا: التكامل مع الواجهة
	•	ربط الواجهة الأمامية مباشرة مع هذا الـ API الموحد
	•	دعم الأوامر التالية على الأقل:
	•	“اشتراكي” → فتح /settings/subscription
	•	“إعدادات الصوت” → فتح /settings/voice
	•	“عرض المشاعر” → /emotions
	•	تغيير اللغة من خلال الصوت

رابعًا: نظام ذاكرة المستخدم
	•	حفظ الحالة في localStorage الآن، ولكن الربط مع memory.db هو المطلوب لاحقًا عبر backend

⸻

4. ملاحظات خاصة
	•	تم توفير نظام تفاعلي جاهز من ناحية التصميم والمشاعر (Emotion-aware UI)
	•	أغلب المكونات تعمل افتراضيًا الآن باستخدام محاكاة (simulated speech) ويجب فقط استبدالها بـ actual API logic
	•	ملفات المساعدة والشرح موجودة مثل:
	•	INSTALL_INSTRUCTIONS.md
	•	تعليمات تثبيت وتشغيل مشروع Mashaaer Voice Agent.md
	•	ChatGPT Interaction Guide for Mashaaer Voice Agent Project.md

⸻

جاهز لأي توضيحات إضافية حسب ما تحتاجه قبل بدء التنفيذ.
كل المكونات مرتبة ومهيأة للعمل بمجرد بناء واجهة /api/voice_logic وتوصيلها.

تحياتي،
Robin | مشروع مشاعر
