Here's the HTML code, designed to align with the Cosmic Theme aesthetic:

HTML

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TTS Playback Test</title>
    <link rel="stylesheet" href="css/cosmic/cosmic-theme.css">
    <style>
        /* Cosmic Theme Overrides and Specific Styles */
        body {
            font-family: 'Roboto', sans-serif; /* A more modern font */
            background: radial-gradient(ellipse at center, #0a0a0a 0%, #000000 100%);
            color: #f0f0f0;
            margin: 0;
            padding: 0;
            overflow-x: hidden; /* Prevent horizontal scroll */
        }

        h1 {
            text-align: center;
            margin-top: 20px;
            color: #ddd;
            text-shadow: 0 0 5px rgba(100, 100, 255, 0.5);
        }

        .section {
            margin: 20px auto;
            max-width: 800px;
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.7);
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(100, 100, 255, 0.4);
        }

        h2 {
            color: #eee;
            border-bottom: 1px solid rgba(100, 100, 255, 0.3);
            padding-bottom: 10px;
            margin-bottom: 15px;
            text-shadow: 0 0 3px rgba(100, 100, 255, 0.3);
        }

        button {
            background-color: #333;
            color: #eee;
            border: none;
            padding: 12px 24px;
            cursor: pointer;
            border-radius: 6px;
            transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
            box-shadow: 0 0 5px rgba(100, 100, 255, 0.2);
            margin-right: 15px;
        }

        button:hover {
            background-color: #555;
            transform: scale(1.02);
            box-shadow: 0 0 10px rgba(100, 100, 255, 0.4);
        }

        audio {
            width: 100%;
            margin-top: 15px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 6px;
            box-shadow: 0 0 5px rgba(100, 100, 255, 0.2);
        }

        #result, #webResult, #mobileResult {
            margin-top: 20px;
            padding: 15px;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 8px;
            overflow-x: auto; /* Allow scrolling for long results */
            white-space: pre-wrap; /* Preserve formatting */
            color: #ddd;
            box-shadow: inset 0 0 10px rgba(100, 100, 255, 0.2);
        }

        .status {
            font-weight: bold;
            display: block; /* Ensure full width */
            margin-bottom: 10px;
        }

        .success {
            color: #a8ff78; /* Green with a slight glow */
            text-shadow: 0 0 5px #a8ff78;
        }

        .error {
            color: #ff78a8; /* Red with a slight glow */
            text-shadow: 0 0 5px #ff78a8;
        }

        pre {
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.8em;
            color: #ccc;
        }

        /* Canvas for background */
        #cosmicCanvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        /* Glow animation for buttons (optional) */
        @keyframes glow {
            0% { box-shadow: 0 0 5px rgba(100, 100, 255, 0.2); }
            50% { box-shadow: 0 0 15px rgba(100, 100, 255, 0.4); }
            100% { box-shadow: 0 0 5px rgba(100, 100, 255, 0.2); }
        }

        button {
            animation: glow 2s infinite alternate;
        }
    </style>
</head>
<body>
    <canvas id="cosmicCanvas"></canvas>
    <h1>TTS Playback Test</h1>

    <div class="section">
        <h2>Web API Test</h2>
        <button onclick="generateAndPlayTTS('/api/speak')">Generate and Play TTS (Web API)</button>
        <audio id="webAudioPlayer" controls></audio>
        <div id="webResult" class="result"></div>
    </div>

    <div class="section">
        <h2>Mobile API Test</h2>
        <button onclick="generateAndPlayTTS('/mobile-api/speak')">Generate and Play TTS (Mobile API)</button>
        <audio id="mobileAudioPlayer" controls></audio>
        <div id="mobileResult" class="result"></div>
    </div>

    <script src="js/cosmic/cosmic-background.js"></script>
    <script>
        // Initialize cosmic background
        const cosmicBackground = new CosmicBackground('cosmicCanvas');

        function generateAndPlayTTS(endpoint) {
            const isWebApi = endpoint === '/api/speak';
            const audioPlayer = document.getElementById(isWebApi ? 'webAudioPlayer' : 'mobileAudioPlayer');
            const resultDiv = document.getElementById(isWebApi ? 'webResult' : 'mobileResult');

            resultDiv.innerHTML = '<span class="status">Generating TTS...</span>';

            fetch(endpoint, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ text: 'This is a test message for TTS playback verification.', language: 'en' })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    resultDiv.innerHTML = `
                        <span class="status success">Success!</span><br>
                        <strong>Audio path:</strong> ${data.audio_path}<br>
                        <strong>Voice:</strong> ${data.voice}<br>
                        <strong>Language:</strong> ${data.language}<br>
                        <strong>Full response:</strong> <pre>${JSON.stringify(data, null, 2)}</pre>
                    `;

                    // Set audio source and play
                    audioPlayer.src = data.audio_path;
                    audioPlayer.play()
                        .then(() => {
                            console.log('Audio playback started successfully');
                        })
                        .catch(error => {
                            console.error('Audio playback error:', error);
                            resultDiv.innerHTML += `<br><span class="status error">Audio playback error: ${error.message}</span>`;
                        });
                } else {
                    resultDiv.innerHTML = `<span class="status error">TTS generation failed: ${data.error || 'Unknown error'}</span>`;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `<span class="status error">Fetch error: ${error.message}</span>`;
                console.error('Fetch error:', error);
            });
        }
    </script>
</body>
</html>
Key Cosmic Theme Elements Implemented:

Background: The radial-gradient from the cosmic theme is used for the body background, and the cosmic-background.js script is included to provide the animated starfield. A canvas element is added to the beginning of the body to render the background.
Font and Colors: The text color is set to a light gray (#f0f0f0) for better contrast against the dark background. A modern font like Roboto is used.
Sections: The .section divs have a semi-transparent black background, rounded corners, and a subtle box shadow to create a "contained" feel while still blending with the cosmic environment.
Headers: The h1 and h2 elements have a slightly glowing text shadow, using the theme's blue accent color.
Buttons: The buttons are styled with the dark background, light text, and glowing box-shadow effect from the cosmic theme. A subtle glow animation is added.
Audio Player: The audio elements are given a semi-transparent background and a subtle box shadow.
Result Area: The result areas (#result, #webResult, #mobileResult) have a semi-transparent black background and an inset box shadow. Long results are wrapped and scrollable.
Status Messages: The .status messages are styled with glowing text shadows. Success messages are green, and error messages are red, as before, but with a thematic color adjustment.
How to Use This:

Save the Code: Save this HTML code as tts-test.html in your public directory.
Ensure cosmic-background.js is Present: Make sure the public/js/cosmic/cosmic-background.js file (containing the cosmic background animation code) is in place.
Adjust Paths (If Necessary): If your CSS or JS files are in different locations, adjust the link and script src attributes accordingly.
Open in Browser: Open tts-test.html in your web browser.